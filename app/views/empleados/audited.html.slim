- breadcrumb :empleados_auditorias
.page-header
  h1
    | Auditoría de Empleados

.row
  .col-sm-4
    .form-group
      label for="datepicker_from" 
        | Desde
      #datepicker_from.input-group.date
        input.form-control type="text" /
        span.input-group-addon
          span.glyphicon.glyphicon-calendar
  .col-sm-4
    .form-group
      label for="datepicker_to" 
        | Hasta
      #datepicker_to.input-group.date
        input.form-control type="text" /
        span.input-group-addon
          span.glyphicon.glyphicon-calendar

table.table.table-striped.table-bordered.table-hover.dataTeableSpc id="datatable_auditoria"
  thead
    tr
      th Accion
      th Usuario
      th Empleado Id
      th Empleado Código
      th Cambios
      th Antes
      th Despues
      th Fecha
  tbody
    - @auditoria.each do |audit|
      tr
        td = audit.action
        td = User.find(audit.user_id).persona.nombre_y_apellido
        td = audit.auditable.try(:id) 
        - if audit.auditable.try(:id) != nil
          td = Empleado.find(audit.auditable.try(:id)).codigo
        -else
          td
        td 
          ul
            - audit.audited_changes.each do |k,v|
              li = k
        td
          ul
            - audit.audited_changes.each do |k,v|
              - if v.kind_of? Array
                li = v[0]
        td
          ul
            - audit.audited_changes.each do |k,v|
              - if audit.action == "update"
                li = v[1]
              - else
                li = v
          / ul
            /   - audit.audited_changes.each do |k,v|
            /     li = v

        td = I18n.l audit.created_at, format: "%d/%m/%Y %H:%M"

javascript:
  convertir_fecha_str = function (fecha) {
    day = fecha.slice(0, 2)
    month = fecha.slice(3, 5)
    year = fecha.slice(6, 10)

    return month + "/" + day + "/" + year
  }

  $(function() {
    var oTable = $('#datatable_auditoria').DataTable({
      "language": {
        "sProcessing":     "Procesando...",
        "sLengthMenu":     "Mostrar _MENU_ registros",
        "sZeroRecords":    "No se encontraron resultados",
        "sEmptyTable":     "Ningún dato disponible en esta tabla",
        "sInfo":           "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
        "sInfoEmpty":      "Mostrando registros del 0 al 0 de un total de 0 registros",
        "sInfoFiltered":   "(filtrado de un total de _MAX_ registros)",
        "sInfoPostFix":    "",
        "sSearch":         "Buscar:",
        "sUrl":            "",
        "sInfoThousands":  ",",
        "sLoadingRecords": "Cargando...",
        "oPaginate": {
            "sFirst":    "Primero",
            "sLast":     "Último",
            "sNext":     "Siguiente",
            "sPrevious": "Anterior"
        },
        "oAria": {
            "sSortAscending":  ": Activar para ordenar la columna de manera ascendente",
            "sSortDescending": ": Activar para ordenar la columna de manera descendente"
        }
      }
    });

    $("#datepicker_from").datetimepicker({
      format: 'DD/MM/YYYY'
    }).on("dp.change", function (e) {
      $('#datepicker_to').data("DateTimePicker").minDate(e.date);
      minDateFilter = new Date( e.date.toDate() ).getTime();
      oTable.draw();
    }).keydown(false);

    $("#datepicker_to").datetimepicker({
      format: 'DD/MM/YYYY'
    }).on("dp.change", function (e) {
      $('#datepicker_from').data("DateTimePicker").maxDate(e.date);
      maxDateFilter = new Date( e.date.toDate() ).getTime();
      oTable.draw();
    }).keydown(false);
  });

  // Date range filter
  minDateFilter = "";
  maxDateFilter = "";

  $.fn.dataTableExt.afnFiltering.push(
    function(oSettings, aData, iDataIndex) {

      if (typeof aData._date == 'undefined') {
        fecha_str = convertir_fecha_str(aData[7])
        aData._date = new Date(fecha_str).getTime();
      }

      if (minDateFilter && !isNaN(minDateFilter)) {
        if (aData._date < minDateFilter) {
          return false;
        }
      }

      if (maxDateFilter && !isNaN(maxDateFilter)) {
        if (aData._date > maxDateFilter) {
          return false;
        }
      }

      return true;
    }
  );